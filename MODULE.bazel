###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
#
# Read https://registry.bazel.build/ for the registry center.
###############################################################################

##### Declare the root module #####
module(
    name = "ypz.compound_strong_type",
)
##### end #####

bazel_dep(name = "protobuf", version = "23.1")
bazel_dep(name = "rules_rust", version = "0.38.0")

##### My own Bazel infrastructure #####
bazel_dep(name = "devops.bazel_infrastructure", version = "0.0.0")
git_override(
    module_name = "devops.bazel_infrastructure",
    commit = "4f1242e0a9398b865dbfd34a051421b915d17335",
    remote = "https://github.com/realypz/devops.bazel_infrastructure.git",
)

##### Rust #####
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.73.0"],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")
##### end #####

##### Bazel buildifier #####
bazel_buildifier = use_extension("//toolchains/format:buildifier_module.bzl", "bazel_buildifier")

BUILDIFIER_REPO_NAME = "buildifier_http_file"

use_repo(bazel_buildifier, BUILDIFIER_REPO_NAME)
##### end #####

#### Google Test #####
bazel_dep(name = "googletest", version = "1.14.0")
##### end #####

##### LLVM Toolchain #####
bazel_dep(name = "toolchains_llvm", version = "0.10.3")
git_override(
    module_name = "toolchains_llvm",
    commit = "329910897f3114f3f5d24407d9abf49b244056d2",
    remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "17.0.6",
)
use_repo(llvm, "llvm_toolchain")
use_repo(llvm, "llvm_toolchain_llvm")  # if you depend on specific tools in scripts

# BUG 2024-02-07: This toolchain will override the default C++ toolchain.
# register_toolchains("@llvm_toolchain//:all")
##### end #####

##### Python toolchain #####
bazel_dep(name = "rules_python", version = "0.29.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = "3.11",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//toolchains/python/runtime:requirements.txt",
)
use_repo(pip, "pip")
##### end #####
